//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor
//     https://github.com/msawczyn/EFDesigner
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Jellyfin.Data.Entities
{
   public partial class Company
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Company()
      {
         CompanyMetadata = new System.Collections.Generic.HashSet<global::Jellyfin.Data.Entities.CompanyMetadata>();

         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static Company CreateCompanyUnsafe()
      {
         return new Company();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="_moviemetadata0"></param>
      /// <param name="_seriesmetadata1"></param>
      /// <param name="_musicalbummetadata2"></param>
      /// <param name="_bookmetadata3"></param>
      /// <param name="_company4"></param>
      public Company(global::Jellyfin.Data.Entities.MovieMetadata _moviemetadata0, global::Jellyfin.Data.Entities.SeriesMetadata _seriesmetadata1, global::Jellyfin.Data.Entities.MusicAlbumMetadata _musicalbummetadata2, global::Jellyfin.Data.Entities.BookMetadata _bookmetadata3, global::Jellyfin.Data.Entities.Company _company4)
      {
         if (_moviemetadata0 == null) throw new ArgumentNullException(nameof(_moviemetadata0));
         _moviemetadata0.Studios.Add(this);

         if (_seriesmetadata1 == null) throw new ArgumentNullException(nameof(_seriesmetadata1));
         _seriesmetadata1.Networks.Add(this);

         if (_musicalbummetadata2 == null) throw new ArgumentNullException(nameof(_musicalbummetadata2));
         _musicalbummetadata2.Labels.Add(this);

         if (_bookmetadata3 == null) throw new ArgumentNullException(nameof(_bookmetadata3));
         _bookmetadata3.Publishers.Add(this);

         if (_company4 == null) throw new ArgumentNullException(nameof(_company4));
         _company4.Parent = this;

         this.CompanyMetadata = new System.Collections.Generic.HashSet<global::Jellyfin.Data.Entities.CompanyMetadata>();

         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="_moviemetadata0"></param>
      /// <param name="_seriesmetadata1"></param>
      /// <param name="_musicalbummetadata2"></param>
      /// <param name="_bookmetadata3"></param>
      /// <param name="_company4"></param>
      public static Company Create(global::Jellyfin.Data.Entities.MovieMetadata _moviemetadata0, global::Jellyfin.Data.Entities.SeriesMetadata _seriesmetadata1, global::Jellyfin.Data.Entities.MusicAlbumMetadata _musicalbummetadata2, global::Jellyfin.Data.Entities.BookMetadata _bookmetadata3, global::Jellyfin.Data.Entities.Company _company4)
      {
         return new Company(_moviemetadata0, _seriesmetadata1, _musicalbummetadata2, _bookmetadata3, _company4);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Backing field for Id
      /// </summary>
      internal int _Id;
      /// <summary>
      /// When provided in a partial class, allows value of Id to be changed before setting.
      /// </summary>
      partial void SetId(int oldValue, ref int newValue);
      /// <summary>
      /// When provided in a partial class, allows value of Id to be changed before returning.
      /// </summary>
      partial void GetId(ref int result);

      /// <summary>
      /// Identity, Indexed, Required
      /// </summary>
      [Key]
      [Required]
      public int Id
      {
         get
         {
            int value = _Id;
            GetId(ref value);
            return (_Id = value);
         }
         protected set
         {
            int oldValue = _Id;
            SetId(oldValue, ref value);
            if (oldValue != value)
            {
               _Id = value;
            }
         }
      }

      /// <summary>
      /// Required
      /// </summary>
      [ConcurrencyCheck]
      [Required]
      public byte[] Timestamp { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      public virtual ICollection<global::Jellyfin.Data.Entities.CompanyMetadata> CompanyMetadata { get; protected set; }

      public virtual global::Jellyfin.Data.Entities.Company Parent { get; set; }

   }
}

